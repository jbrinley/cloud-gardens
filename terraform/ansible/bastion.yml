---
- name: Provision Bastion Server
  hosts: all
  become: yes

  pre_tasks:
    - name: Update and upgrade apt
      apt: update_cache=yes upgrade=dist cache_valid_time=3600

    - name: Ensure required packages are installed
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - sudo
        - make
        - curl
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - git
        - nfs-common

    - name: Ensure pip is installed
      easy_install:
        name: pip
        state: present

    - name: Include bastion variables
      include_vars:
        dir: vars/bastion
      tags: [ always ]

    - name: Include override variables
      include_vars:
        dir: vars/overrides
        ignore_files: ['.keep']
      tags: [ always ]

    - stat:
        path: "{{ playbook_dir }}/.custom/vars/bastion"
      register: custom_bastion_vars
      tags: [ always ]

    - name: Include customization variables
      include_vars:
        dir: "{{ playbook_dir }}/.custom/vars/bastion"
      when: custom_bastion_vars.stat.exists
      tags: [ always ]

  roles:
    - { role: system, tags: [ system ] }
    - { role: aws, tags: [ jenkins, aws ] }
    - { role: bcrypt, tags: [ bcrypt ] }
    - role: ssl
      ssl_certs_is_master: "{{ bastion_is_master }}"
      ssl_certs_master_ip: "{{ bastion_master_ip }}"
      ssl_certs_master_ready: "{{ bastion_master_ready }}"
      letsencrypt_domains: ["{{ domain }}","{{ ci_subdomain }}.{{ domain }}","{{ status_subdomain }}.{{ domain }}"]
      letsencrypt_init_domains: ["{{ lookup('pipe','date +%Y%m%d%H%M%S') }}.{{ domain }}"]
      tags: [ ssl ]
    - { role: jenkins, tags: [ jenkins ] }
    - role: aws
      aws_user_paths: [ { path: /var/lib/jenkins, owner: jenkins, group: jenkins } ]
      tags: [ aws, jenkins ]
    - { role: traefik, when: bastion_master_ready, tags: [ ssl, traefik ] }
    - { role: logrotate, tags: [ logrotate ] }
    - { role: maintenance, tags: [ maintenance ] }

  tasks:

    - stat:
        path: "{{ playbook_dir }}/.custom/bastion.yml"
      register: custom_bastion_include
      tags: [ customizations ]

    - include: "{{ playbook_dir }}/.custom/bastion.yml"
      when: (custom_bastion_include is defined) and (custom_bastion_include.stat.exists)
      tags: [ customizations ]
